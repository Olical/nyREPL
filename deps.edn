{:paths ["src" "resources"]
 :deps
 {org.clojure/clojure {:mvn/version "1.12.1"}

  ;; Logging
  ; com.taoensso/telemere {:mvn/version "1.0.1"}

  ;; Clojure evaluation for the REPL adaptor code.
  org.babashka/sci {:mvn/version "0.10.47"}

  ;; Schemas and type checking
  org.typedclojure/typed.clj.runtime {:mvn/version "1.3.1-SNAPSHOT"}

  ;; Error handling
  fmnoise/flow {:mvn/version "4.3.0"}}

 :aliases
 {:test {:extra-paths ["test"]
         :extra-deps {lambdaisland/kaocha {:mvn/version "1.91.1392"}
                      nubank/matcher-combinators {:mvn/version "3.9.1"}}
         :main-opts ["-m" "kaocha.runner"]}
  :flowstorm {:classpath-overrides {org.clojure/clojure nil}
              :extra-deps {com.github.flow-storm/clojure {:mvn/version "1.12.1"}
                           com.github.flow-storm/flow-storm-dbg {:mvn/version "4.4.6"}}
              :jvm-opts ["-Dflowstorm.startRecording=false"
                         "-Dclojure.storm.instrumentEnable=true"
                         "-Dflowstorm.title=Storm"
                         "-Dflowstorm.theme=dark"]}
  :dev {:extra-deps {cider/cider-nrepl {:mvn/version "0.57.0"}}
        :main-opts ["-m" "nrepl.cmdline" "--middleware" "[cider.nrepl/cider-middleware]"]}
  :antq {:deps {com.github.liquidz/antq {:mvn/version "2.11.1276"}}
         :main-opts ["-m" "antq.core"]}
  :format {:deps {cljfmt/cljfmt {:mvn/version "0.9.2"}}
           :main-opts ["-m" "cljfmt.main" "fix"]}
  :typedclojure {:extra-deps {org.typedclojure/typed.clj.checker {:mvn/version "1.3.1-SNAPSHOT"}}}
  :typedclojure-lsp {:extra-deps {uk.me.oli/typedclojure-lsp {:mvn/version "0.0.7"}}
                     :main-opts ["-m" "typedclojure-lsp.main"]}
  :build {:extra-deps {io.github.clojure/tools.build {:mvn/version "0.10.9"}
                       slipset/deps-deploy {:mvn/version "0.2.2"}}
          :ns-default build}
  :native-image
  {:main-opts ["-m" "clj.native-image" "nyrepl.main"
               "--gc=G1"
               "--pgo"
               "--strict-image-heap"
               "--no-fallback"
               "--initialize-at-build-time"
               "-march=native"
               "-H:+UnlockExperimentalVMOptions"
               "-H:Name=nyrepl"
               "-H:Path=bin"]
   :jvm-opts ["-Dclojure.compiler.direct-linking=true"]
   :extra-deps
   {clj.native-image/clj.native-image
    {:git/url "https://github.com/taylorwood/clj.native-image.git"
     :sha "4604ae76855e09cdabc0a2ecc5a7de2cc5b775d6"}}}}}
